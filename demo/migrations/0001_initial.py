# Generated by Django 2.2.28 on 2023-07-16 05:35

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=70, verbose_name='标题')),
                ('keywords', models.CharField(blank=True, max_length=120, null=True, verbose_name='关键字')),
                ('abstract', models.TextField(blank=True, max_length=200, verbose_name='摘要')),
                ('category', models.CharField(blank=True, max_length=20, verbose_name='分类')),
                ('content', models.TextField(verbose_name='内容')),
                ('author', models.CharField(max_length=20, verbose_name='作者')),
                ('view_count', models.IntegerField(default=0, verbose_name='阅读量')),
                ('is_top', models.IntegerField(choices=[(0, '否'), (1, '是')], default=0, verbose_name='是否推荐')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': ('文章',),
                'verbose_name_plural': ('文章',),
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=50, verbose_name='项目名称')),
                ('project_desc', models.CharField(blank=True, max_length=500, verbose_name='项目描述')),
                ('is_enabled', models.IntegerField(choices=[(0, '未启用'), (1, '已启用')], default=1, verbose_name='是否启用')),
                ('is_deleted', models.IntegerField(choices=[(0, '未删除'), (1, '已删除')], default=0, verbose_name='是否逻辑删除')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': ('项目',),
                'verbose_name_plural': '项目',
            },
        ),
        migrations.CreateModel(
            name='SysUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=20, verbose_name='姓名')),
                ('sex', models.CharField(blank=True, max_length=2, verbose_name='性别')),
                ('age', models.IntegerField(verbose_name='年龄')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': ('用户',),
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
